//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/_Game/Input Actions/Player/PlayerInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputActions : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputActions"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""b470f16f-d9e8-45ee-abfa-1367d326623c"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""f550a154-ac92-4479-a6ce-2b1325d353b6"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ChangeToSubShip"",
                    ""type"": ""Button"",
                    ""id"": ""2060d397-57d9-4316-81bf-fba4aa935889"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Shoot"",
                    ""type"": ""Button"",
                    ""id"": ""223ed35a-ffe0-41f9-b3ea-00e570b4e559"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Aim"",
                    ""type"": ""PassThrough"",
                    ""id"": ""5e31bd29-55a8-43fc-841e-ec532c9af8a1"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""294ad2b4-d5da-4626-8068-175141d846b2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MoveAimToRight"",
                    ""type"": ""Button"",
                    ""id"": ""03f0e94b-c2be-41f4-a2f7-166373a39105"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MoveAimToLeft"",
                    ""type"": ""Button"",
                    ""id"": ""29b503c2-8218-4fe8-8cfc-8c88a6a98edd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ShootHolding"",
                    ""type"": ""Button"",
                    ""id"": ""88ad7fe9-8563-41d1-b02a-766b601f4d43"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MoveAim"",
                    ""type"": ""Value"",
                    ""id"": ""a1d19541-ab6f-4f23-9b66-a1c34338b6be"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""3aa46fb1-319f-4a8d-baab-57dadaf6a8af"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""9a377019-056c-4455-b047-74368c46ea99"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""K&M"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""ad533d46-8d51-49f9-9e9b-1dbdd6fb10de"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""K&M"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""a1f8580e-b0ea-4d7c-b5e9-0874248af97c"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""K&M"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""b74a2f57-f573-4e8f-8419-9b583b5e753c"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""K&M"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""5866ef8e-44b7-4614-b9bd-429d97b32a3d"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": ""StickDeadzone"",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""83cc8b72-6e05-4aa6-b04a-658eeb02c5ea"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c1251247-f9d9-4667-8c48-cb517c3f166c"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ded6a700-8882-4d82-bca2-cbab5a7e1f33"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""K&M"",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f1d5463b-0172-4315-8978-78cd99ca4edb"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""K&M"",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""70fab2f6-728f-4f15-be48-8ff071f54109"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": ""StickDeadzone"",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Aim"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""44e754d8-cd5d-4bd9-8eb5-6544820ecab4"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""K&M"",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0a4657e3-6515-4cc2-be39-e25a79b5e71d"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""267e5808-ce19-4f92-9924-4212fe1bb954"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": ""Hold(duration=0.1)"",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""MoveAimToRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""88913611-a038-43ad-8951-749f6c1fcfa4"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": ""Hold(duration=0.1)"",
                    ""processors"": """",
                    ""groups"": ""K&M"",
                    ""action"": ""MoveAimToRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3cb66457-577a-4c9a-bf47-b78fa0e87f02"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": ""Hold(duration=0.1)"",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""MoveAimToLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""14f64627-5f10-4e4d-9675-1f7709399d8c"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": ""Hold(duration=0.1)"",
                    ""processors"": """",
                    ""groups"": ""K&M"",
                    ""action"": ""MoveAimToLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5bd5c7c4-eec3-4f56-9f8e-f4437c5ea07f"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""ShootHolding"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""10ea1d11-f48d-42fc-b05b-08921c32b007"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""ShootHolding"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cb6c14ed-6d06-43e6-acd0-84581f23027d"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": ""K&M"",
                    ""action"": ""ShootHolding"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""483a21e1-91bc-424e-bd98-60413b2e955e"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""MoveAim"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4249f5c7-4cb5-4280-83e9-126ea249ac40"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""K&M"",
                    ""action"": ""ShootHolding"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""50d5cbe0-8f60-4779-9325-2b73fd8e573a"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""ChangeToSubShip"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""67ffa2ab-62bc-4bd7-ab6c-dc2b4386d667"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""K&M"",
                    ""action"": ""ChangeToSubShip"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Main Ship"",
            ""id"": ""bec0594a-9684-4778-b059-4db233e70407"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""d5f57634-9e68-435a-b32c-fae5fc4346e2"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""69382a29-7ba8-4d3a-b97b-fd47e9a2d81f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ChangeToSubShip"",
                    ""type"": ""Button"",
                    ""id"": ""824cba35-7161-463f-9599-71ee2046e55e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""b227a36c-5aef-4a10-9bd4-cc48998bf568"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""41e20011-91ef-4560-a29d-1a98de377278"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""K&M"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""fc5c080b-6a2b-40ed-af4b-53b97e2f58ba"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""K&M"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""4aad1119-13a5-4f15-a451-a9c8a6b2e6df"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""K&M"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""2dce0d72-e7fd-4839-9ee2-38114f411c39"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""K&M"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""745fd15e-a1ce-4879-9fd4-fbd37a431c42"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": ""StickDeadzone"",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""41dc320a-1b21-44d8-88e8-315d5e971faa"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""K&M"",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""640d2510-b74f-4484-8471-5b5a6d69f1fd"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0151d76f-6486-4c2b-beec-495c45134144"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""ChangeToSubShip"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fe058f06-a3b5-4497-af2c-ca374054e806"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""K&M"",
                    ""action"": ""ChangeToSubShip"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Sub Attack Ship"",
            ""id"": ""ed7aa73a-953b-4bf1-a38d-4b6e41d3a9fa"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""e4dbdca7-9052-4a1a-b144-891973a73023"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ShootHolding"",
                    ""type"": ""Button"",
                    ""id"": ""8565a4e2-bbd8-44ee-975f-bd314bf40ca4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Shoot"",
                    ""type"": ""Button"",
                    ""id"": ""7b2be2eb-2409-4679-87fd-27ad1dc7345a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""9e9fbf05-7106-4e0c-a0b1-e93140c5085b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ChangeToAttackShip"",
                    ""type"": ""Button"",
                    ""id"": ""58c02b24-6cb4-46bc-90f1-44b217402e58"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""1ae6efe8-99c2-4d8b-81c6-e2575e817a07"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""2a2b2e4e-26b0-40f3-b1b2-cc57896fe222"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""K&M"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""058e1750-c88f-41e2-8008-e3f29c9b0e36"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""K&M"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""768e8fae-9f81-4c38-a34a-90a5a8b35e73"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""K&M"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""1c7f6862-8f61-42bb-a2aa-a2848c14c9ec"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""K&M"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""6b6414bf-5487-4cba-b5c8-ba0dc4428f05"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": ""StickDeadzone"",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""709b9b71-300e-40cd-8b36-23b2871c0345"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""K&M"",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""00a5fa8d-e7ec-42b8-8f46-ebc6844e92e5"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""178d244b-ea25-4a52-b8e1-cf0eb3950e88"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b40c52c2-c689-495b-8647-2f6f87f72de4"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b554675b-332a-4eee-bc66-099cbdeed95c"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""K&M"",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d622227c-541f-4a02-aec6-f3ecc79bf934"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""K&M"",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""263dfe9e-03d0-4f8d-a5b6-2dd5bad6aa84"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""ShootHolding"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""67c3b28c-976c-43fe-bd68-4c12ffe0da66"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""ShootHolding"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dee68595-8cb8-43ce-8f76-c649340fde1f"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": ""K&M"",
                    ""action"": ""ShootHolding"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""18025481-6500-4ae5-a705-cb94a65afa33"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""K&M"",
                    ""action"": ""ShootHolding"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""eb9e7898-8099-4564-8353-140288d78fd5"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""ChangeToAttackShip"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7ac69389-fa10-4c83-a9ce-a2e90e112582"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""K&M"",
                    ""action"": ""ChangeToAttackShip"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Gamepad"",
            ""bindingGroup"": ""Gamepad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""K&M"",
            ""bindingGroup"": ""K&M"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Movement = m_Player.FindAction("Movement", throwIfNotFound: true);
        m_Player_ChangeToSubShip = m_Player.FindAction("ChangeToSubShip", throwIfNotFound: true);
        m_Player_Shoot = m_Player.FindAction("Shoot", throwIfNotFound: true);
        m_Player_Aim = m_Player.FindAction("Aim", throwIfNotFound: true);
        m_Player_Pause = m_Player.FindAction("Pause", throwIfNotFound: true);
        m_Player_MoveAimToRight = m_Player.FindAction("MoveAimToRight", throwIfNotFound: true);
        m_Player_MoveAimToLeft = m_Player.FindAction("MoveAimToLeft", throwIfNotFound: true);
        m_Player_ShootHolding = m_Player.FindAction("ShootHolding", throwIfNotFound: true);
        m_Player_MoveAim = m_Player.FindAction("MoveAim", throwIfNotFound: true);
        // Main Ship
        m_MainShip = asset.FindActionMap("Main Ship", throwIfNotFound: true);
        m_MainShip_Movement = m_MainShip.FindAction("Movement", throwIfNotFound: true);
        m_MainShip_Pause = m_MainShip.FindAction("Pause", throwIfNotFound: true);
        m_MainShip_ChangeToSubShip = m_MainShip.FindAction("ChangeToSubShip", throwIfNotFound: true);
        // Sub Attack Ship
        m_SubAttackShip = asset.FindActionMap("Sub Attack Ship", throwIfNotFound: true);
        m_SubAttackShip_Movement = m_SubAttackShip.FindAction("Movement", throwIfNotFound: true);
        m_SubAttackShip_ShootHolding = m_SubAttackShip.FindAction("ShootHolding", throwIfNotFound: true);
        m_SubAttackShip_Shoot = m_SubAttackShip.FindAction("Shoot", throwIfNotFound: true);
        m_SubAttackShip_Pause = m_SubAttackShip.FindAction("Pause", throwIfNotFound: true);
        m_SubAttackShip_ChangeToAttackShip = m_SubAttackShip.FindAction("ChangeToAttackShip", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private IPlayerActions m_PlayerActionsCallbackInterface;
    private readonly InputAction m_Player_Movement;
    private readonly InputAction m_Player_ChangeToSubShip;
    private readonly InputAction m_Player_Shoot;
    private readonly InputAction m_Player_Aim;
    private readonly InputAction m_Player_Pause;
    private readonly InputAction m_Player_MoveAimToRight;
    private readonly InputAction m_Player_MoveAimToLeft;
    private readonly InputAction m_Player_ShootHolding;
    private readonly InputAction m_Player_MoveAim;
    public struct PlayerActions
    {
        private @PlayerInputActions m_Wrapper;
        public PlayerActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_Player_Movement;
        public InputAction @ChangeToSubShip => m_Wrapper.m_Player_ChangeToSubShip;
        public InputAction @Shoot => m_Wrapper.m_Player_Shoot;
        public InputAction @Aim => m_Wrapper.m_Player_Aim;
        public InputAction @Pause => m_Wrapper.m_Player_Pause;
        public InputAction @MoveAimToRight => m_Wrapper.m_Player_MoveAimToRight;
        public InputAction @MoveAimToLeft => m_Wrapper.m_Player_MoveAimToLeft;
        public InputAction @ShootHolding => m_Wrapper.m_Player_ShootHolding;
        public InputAction @MoveAim => m_Wrapper.m_Player_MoveAim;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMovement;
                @ChangeToSubShip.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnChangeToSubShip;
                @ChangeToSubShip.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnChangeToSubShip;
                @ChangeToSubShip.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnChangeToSubShip;
                @Shoot.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnShoot;
                @Shoot.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnShoot;
                @Shoot.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnShoot;
                @Aim.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAim;
                @Aim.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAim;
                @Aim.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAim;
                @Pause.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPause;
                @Pause.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPause;
                @Pause.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPause;
                @MoveAimToRight.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMoveAimToRight;
                @MoveAimToRight.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMoveAimToRight;
                @MoveAimToRight.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMoveAimToRight;
                @MoveAimToLeft.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMoveAimToLeft;
                @MoveAimToLeft.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMoveAimToLeft;
                @MoveAimToLeft.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMoveAimToLeft;
                @ShootHolding.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnShootHolding;
                @ShootHolding.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnShootHolding;
                @ShootHolding.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnShootHolding;
                @MoveAim.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMoveAim;
                @MoveAim.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMoveAim;
                @MoveAim.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMoveAim;
            }
            m_Wrapper.m_PlayerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @ChangeToSubShip.started += instance.OnChangeToSubShip;
                @ChangeToSubShip.performed += instance.OnChangeToSubShip;
                @ChangeToSubShip.canceled += instance.OnChangeToSubShip;
                @Shoot.started += instance.OnShoot;
                @Shoot.performed += instance.OnShoot;
                @Shoot.canceled += instance.OnShoot;
                @Aim.started += instance.OnAim;
                @Aim.performed += instance.OnAim;
                @Aim.canceled += instance.OnAim;
                @Pause.started += instance.OnPause;
                @Pause.performed += instance.OnPause;
                @Pause.canceled += instance.OnPause;
                @MoveAimToRight.started += instance.OnMoveAimToRight;
                @MoveAimToRight.performed += instance.OnMoveAimToRight;
                @MoveAimToRight.canceled += instance.OnMoveAimToRight;
                @MoveAimToLeft.started += instance.OnMoveAimToLeft;
                @MoveAimToLeft.performed += instance.OnMoveAimToLeft;
                @MoveAimToLeft.canceled += instance.OnMoveAimToLeft;
                @ShootHolding.started += instance.OnShootHolding;
                @ShootHolding.performed += instance.OnShootHolding;
                @ShootHolding.canceled += instance.OnShootHolding;
                @MoveAim.started += instance.OnMoveAim;
                @MoveAim.performed += instance.OnMoveAim;
                @MoveAim.canceled += instance.OnMoveAim;
            }
        }
    }
    public PlayerActions @Player => new PlayerActions(this);

    // Main Ship
    private readonly InputActionMap m_MainShip;
    private IMainShipActions m_MainShipActionsCallbackInterface;
    private readonly InputAction m_MainShip_Movement;
    private readonly InputAction m_MainShip_Pause;
    private readonly InputAction m_MainShip_ChangeToSubShip;
    public struct MainShipActions
    {
        private @PlayerInputActions m_Wrapper;
        public MainShipActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_MainShip_Movement;
        public InputAction @Pause => m_Wrapper.m_MainShip_Pause;
        public InputAction @ChangeToSubShip => m_Wrapper.m_MainShip_ChangeToSubShip;
        public InputActionMap Get() { return m_Wrapper.m_MainShip; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MainShipActions set) { return set.Get(); }
        public void SetCallbacks(IMainShipActions instance)
        {
            if (m_Wrapper.m_MainShipActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_MainShipActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_MainShipActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_MainShipActionsCallbackInterface.OnMovement;
                @Pause.started -= m_Wrapper.m_MainShipActionsCallbackInterface.OnPause;
                @Pause.performed -= m_Wrapper.m_MainShipActionsCallbackInterface.OnPause;
                @Pause.canceled -= m_Wrapper.m_MainShipActionsCallbackInterface.OnPause;
                @ChangeToSubShip.started -= m_Wrapper.m_MainShipActionsCallbackInterface.OnChangeToSubShip;
                @ChangeToSubShip.performed -= m_Wrapper.m_MainShipActionsCallbackInterface.OnChangeToSubShip;
                @ChangeToSubShip.canceled -= m_Wrapper.m_MainShipActionsCallbackInterface.OnChangeToSubShip;
            }
            m_Wrapper.m_MainShipActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @Pause.started += instance.OnPause;
                @Pause.performed += instance.OnPause;
                @Pause.canceled += instance.OnPause;
                @ChangeToSubShip.started += instance.OnChangeToSubShip;
                @ChangeToSubShip.performed += instance.OnChangeToSubShip;
                @ChangeToSubShip.canceled += instance.OnChangeToSubShip;
            }
        }
    }
    public MainShipActions @MainShip => new MainShipActions(this);

    // Sub Attack Ship
    private readonly InputActionMap m_SubAttackShip;
    private ISubAttackShipActions m_SubAttackShipActionsCallbackInterface;
    private readonly InputAction m_SubAttackShip_Movement;
    private readonly InputAction m_SubAttackShip_ShootHolding;
    private readonly InputAction m_SubAttackShip_Shoot;
    private readonly InputAction m_SubAttackShip_Pause;
    private readonly InputAction m_SubAttackShip_ChangeToAttackShip;
    public struct SubAttackShipActions
    {
        private @PlayerInputActions m_Wrapper;
        public SubAttackShipActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_SubAttackShip_Movement;
        public InputAction @ShootHolding => m_Wrapper.m_SubAttackShip_ShootHolding;
        public InputAction @Shoot => m_Wrapper.m_SubAttackShip_Shoot;
        public InputAction @Pause => m_Wrapper.m_SubAttackShip_Pause;
        public InputAction @ChangeToAttackShip => m_Wrapper.m_SubAttackShip_ChangeToAttackShip;
        public InputActionMap Get() { return m_Wrapper.m_SubAttackShip; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(SubAttackShipActions set) { return set.Get(); }
        public void SetCallbacks(ISubAttackShipActions instance)
        {
            if (m_Wrapper.m_SubAttackShipActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_SubAttackShipActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_SubAttackShipActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_SubAttackShipActionsCallbackInterface.OnMovement;
                @ShootHolding.started -= m_Wrapper.m_SubAttackShipActionsCallbackInterface.OnShootHolding;
                @ShootHolding.performed -= m_Wrapper.m_SubAttackShipActionsCallbackInterface.OnShootHolding;
                @ShootHolding.canceled -= m_Wrapper.m_SubAttackShipActionsCallbackInterface.OnShootHolding;
                @Shoot.started -= m_Wrapper.m_SubAttackShipActionsCallbackInterface.OnShoot;
                @Shoot.performed -= m_Wrapper.m_SubAttackShipActionsCallbackInterface.OnShoot;
                @Shoot.canceled -= m_Wrapper.m_SubAttackShipActionsCallbackInterface.OnShoot;
                @Pause.started -= m_Wrapper.m_SubAttackShipActionsCallbackInterface.OnPause;
                @Pause.performed -= m_Wrapper.m_SubAttackShipActionsCallbackInterface.OnPause;
                @Pause.canceled -= m_Wrapper.m_SubAttackShipActionsCallbackInterface.OnPause;
                @ChangeToAttackShip.started -= m_Wrapper.m_SubAttackShipActionsCallbackInterface.OnChangeToAttackShip;
                @ChangeToAttackShip.performed -= m_Wrapper.m_SubAttackShipActionsCallbackInterface.OnChangeToAttackShip;
                @ChangeToAttackShip.canceled -= m_Wrapper.m_SubAttackShipActionsCallbackInterface.OnChangeToAttackShip;
            }
            m_Wrapper.m_SubAttackShipActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @ShootHolding.started += instance.OnShootHolding;
                @ShootHolding.performed += instance.OnShootHolding;
                @ShootHolding.canceled += instance.OnShootHolding;
                @Shoot.started += instance.OnShoot;
                @Shoot.performed += instance.OnShoot;
                @Shoot.canceled += instance.OnShoot;
                @Pause.started += instance.OnPause;
                @Pause.performed += instance.OnPause;
                @Pause.canceled += instance.OnPause;
                @ChangeToAttackShip.started += instance.OnChangeToAttackShip;
                @ChangeToAttackShip.performed += instance.OnChangeToAttackShip;
                @ChangeToAttackShip.canceled += instance.OnChangeToAttackShip;
            }
        }
    }
    public SubAttackShipActions @SubAttackShip => new SubAttackShipActions(this);
    private int m_GamepadSchemeIndex = -1;
    public InputControlScheme GamepadScheme
    {
        get
        {
            if (m_GamepadSchemeIndex == -1) m_GamepadSchemeIndex = asset.FindControlSchemeIndex("Gamepad");
            return asset.controlSchemes[m_GamepadSchemeIndex];
        }
    }
    private int m_KMSchemeIndex = -1;
    public InputControlScheme KMScheme
    {
        get
        {
            if (m_KMSchemeIndex == -1) m_KMSchemeIndex = asset.FindControlSchemeIndex("K&M");
            return asset.controlSchemes[m_KMSchemeIndex];
        }
    }
    public interface IPlayerActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnChangeToSubShip(InputAction.CallbackContext context);
        void OnShoot(InputAction.CallbackContext context);
        void OnAim(InputAction.CallbackContext context);
        void OnPause(InputAction.CallbackContext context);
        void OnMoveAimToRight(InputAction.CallbackContext context);
        void OnMoveAimToLeft(InputAction.CallbackContext context);
        void OnShootHolding(InputAction.CallbackContext context);
        void OnMoveAim(InputAction.CallbackContext context);
    }
    public interface IMainShipActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnPause(InputAction.CallbackContext context);
        void OnChangeToSubShip(InputAction.CallbackContext context);
    }
    public interface ISubAttackShipActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnShootHolding(InputAction.CallbackContext context);
        void OnShoot(InputAction.CallbackContext context);
        void OnPause(InputAction.CallbackContext context);
        void OnChangeToAttackShip(InputAction.CallbackContext context);
    }
}
